name: Flutter/Dart Quality Gates (Pull-Request, Branches)

on:
  push:
    branches-ignore:
      - main
  pull_request:

permissions: read-all

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - run: flutter --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Verify Formatting
        if: matrix.os == 'ubuntu-latest'
        run: |
          dart format -l 120 ./lib/l10n
          dart format -l 120 --output=none --set-exit-if-changed .

      - name: Check Localizations Ordering
        if: matrix.os == 'ubuntu-latest'
        run: dart run grinder sort-translations

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      #- name: Analyze Project Source
      #  run: flutter analyze

      - name: Run All Tests
        run: | 
          dart run grinder test --coverage > test_execution.log
          dart run test_cov_console --file="./coverage/lcov.info" --total > coverage/test_total.log
        
      - name: Generate Golden Images
        if: ${{ failure() }}
        run: flutter test --update-goldens test/widget

      - name: Store Tests Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testing_logs--${{ matrix.os }}
          path: |
            coverage
            test/widget
            test_execution.log
